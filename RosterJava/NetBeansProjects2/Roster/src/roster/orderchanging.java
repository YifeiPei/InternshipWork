/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package roster;

import java.io.*;
import java.util.*;
import java.sql.*;
import java.awt.Color;
//import javafx.scene.paint.Color;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;

/**
 *
 * @author shahua 
 */
public class orderchanging extends javax.swing.JFrame {

    /**
     * Creates new form orderchanging
     */
    public orderchanging() {
        initComponents();
        load_order();
        //load_name();
        //jTextArea1.append("The order of ABERFOYLE PARK is:\n");
        //jTextArea1.append("\n");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(850, 538));

        jButton1.setText("Add");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });

        jButton2.setText("Save");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });

        jButton3.setText("Remove");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton3MousePressed(evt);
            }
        });

        jButton4.setText("Remove All");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton4MousePressed(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ABERFOYLE PARK", "WILLUNGA", "WOODCROFT", "NOARLUNGA" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jComboBox1MousePressed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(75, 75, 75))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        // TODO add your handling code here:
        if (!jList1.isSelectionEmpty()) {
            if (jComboBox1.getSelectedItem().equals("ABERFOYLE PARK")) {
                order_ap.add((String) jList1.getSelectedValue());
                jTextArea1.append((String) jList1.getSelectedValue());
                jTextArea1.append("\n");
                DefaultListModel l = (DefaultListModel) jList1.getModel();
                l.remove(jList1.getSelectedIndex());
                this.jList1.setModel(l);
            } else if (jComboBox1.getSelectedItem().equals("WILLUNGA")) {
                order_will.add((String) jList1.getSelectedValue());
                jTextArea1.append((String) jList1.getSelectedValue());
                jTextArea1.append("\n");
                DefaultListModel l = (DefaultListModel) jList1.getModel();
                l.remove(jList1.getSelectedIndex());
                this.jList1.setModel(l);
            } else if (jComboBox1.getSelectedItem().equals("WOODCROFT")) {
                order_wcft.add((String) jList1.getSelectedValue());
                jTextArea1.append((String) jList1.getSelectedValue());
                jTextArea1.append("\n");
                DefaultListModel l = (DefaultListModel) jList1.getModel();
                l.remove(jList1.getSelectedIndex());
                this.jList1.setModel(l);
            } else {
                order_noar.add((String) jList1.getSelectedValue());
                jTextArea1.append((String) jList1.getSelectedValue());
                jTextArea1.append("\n");
                DefaultListModel l = (DefaultListModel) jList1.getModel();
                l.remove(jList1.getSelectedIndex());
                this.jList1.setModel(l);
            }
        }
    }//GEN-LAST:event_jButton1MousePressed

    private void jComboBox1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox1MousePressed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        jTextArea1.setText(null);

        if (jComboBox1.getSelectedItem().equals("ABERFOYLE PARK")) {
            jTextArea1.append("The order of ABERFOYLE PARK is:\n");
            jTextArea1.append("\n");
            for (int i = 0; i < order_ap.size(); i++) {
                jTextArea1.append(order_ap.get(i));
                jTextArea1.append("\n");
            }
        } else if (jComboBox1.getSelectedItem().equals("WILLUNGA")) {
            jTextArea1.append("The order of WILLUNGA is:\n");
            jTextArea1.append("\n");
            for (int i = 0; i < order_will.size(); i++) {
                jTextArea1.append(order_will.get(i));
                jTextArea1.append("\n");
            }
        } else if (jComboBox1.getSelectedItem().equals("WOODCROFT")) {
            jTextArea1.append("The order of WOODCROFT is:\n");
            jTextArea1.append("\n");
            for (int i = 0; i < order_wcft.size(); i++) {
                jTextArea1.append(order_wcft.get(i));
                jTextArea1.append("\n");
            }
        } else if (jComboBox1.getSelectedItem().equals("NOARLUNGA")) {
            jTextArea1.append("The order of NOARLUNGA is:\n");
            jTextArea1.append("\n");
            for (int i = 0; i < order_noar.size(); i++) {
                jTextArea1.append(order_noar.get(i));
                jTextArea1.append("\n");
            }
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        // TODO add your handling code here:
        String q;
        //delete all from database
        q = "use roster delete from order_ap";
        sql_database(q);
        q = "use roster delete from order_will";
        sql_database(q);
        q = "use roster delete from order_wcft";
        sql_database(q);
        q = "use roster delete from order_noar";
        sql_database(q);
        //save all to database
        for (int i = 0; i < order_ap.size(); i++) {
            q = "use roster insert into order_ap (sequence, name) values ('" + i + "','" + order_ap.get(i) + "')";
            System.out.println(q);
            sql_database(q);
        }
        for (int i = 0; i < order_will.size(); i++) {
            q = "use roster insert into order_will (sequence, name) values ('" + i + "','" + order_will.get(i) + "')";
            System.out.println(q);
            sql_database(q);
        }
        for (int i = 0; i < order_wcft.size(); i++) {
            q = "use roster insert into order_wcft (sequence, name) values ('" + i + "','" + order_wcft.get(i) + "')";
            System.out.println(q);
            sql_database(q);
        }
        for (int i = 0; i < order_noar.size(); i++) {
            q = "use roster insert into order_noar (sequence, name) values ('" + i + "','" + order_noar.get(i) + "')";

            sql_database(q);
        }
    }//GEN-LAST:event_jButton2MousePressed

    private void jButton3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MousePressed
        // TODO add your handling code here:
        jTextArea1.setText(null);
        if (jComboBox1.getSelectedItem().equals("ABERFOYLE PARK")) {
            jTextArea1.append("The order of ABERFOYLE PARK is:\n");
            jTextArea1.append("\n");
            order_ap = new ArrayList<String>();
            String q = "use roster delete from order_ap";
            sql_database(q);
        } else if (jComboBox1.getSelectedItem().equals("WILLUNGA")) {
            jTextArea1.append("The order of WILLUNGA is:\n");
            jTextArea1.append("\n");
            order_will = new ArrayList<String>();
            String q = "use roster delete from order_will";
            sql_database(q);
        } else if (jComboBox1.getSelectedItem().equals("WOODCROFT")) {
            jTextArea1.append("The order of WOODCROFT is:\n");
            jTextArea1.append("\n");
            order_wcft = new ArrayList<String>();
            String q = "use roster delete from order_wcft";
            sql_database(q);
        } else if (jComboBox1.getSelectedItem().equals("NOARLUNGA")) {
            jTextArea1.append("The order of NOARLUNGA is:\n");
            jTextArea1.append("\n");
            order_noar = new ArrayList<String>();
            String q = "use roster delete from order_noar";
            sql_database(q);
        }
        //jList1.setModel(null);
        jList1.removeAll();
         DefaultListModel m = (DefaultListModel) jList1.getModel();
                m.removeAllElements();
                this.jList1.setModel(m);
        
        load_name();
        jList1.setBackground(Color.WHITE);
        
        for(int i=0;i<order_ap.size();i++){
            DefaultListModel l = (DefaultListModel) jList1.getModel();
            if(l.contains(order_ap.get(i))){
                l.removeElement(order_ap.get(i));
                this.jList1.setModel(l);
            }
        }
        
        for(int i=0;i<order_will.size();i++){
            DefaultListModel l = (DefaultListModel) jList1.getModel();
            if(l.contains(order_will.get(i))){
                l.removeElement(order_will.get(i));
                this.jList1.setModel(l);
            }
        }
        
        for(int i=0;i<order_wcft.size();i++){
            DefaultListModel l = (DefaultListModel) jList1.getModel();
            if(l.contains(order_wcft.get(i))){
                l.removeElement(order_wcft.get(i));
                this.jList1.setModel(l);
            }
        }
        
        for(int i=0;i<order_noar.size();i++){
            DefaultListModel l = (DefaultListModel) jList1.getModel();
            if(l.contains(order_noar.get(i))){
                l.removeElement(order_noar.get(i));
                this.jList1.setModel(l);
            }
        }
        
        /*
        DefaultListModel l = (DefaultListModel) jList1.getModel();
                l.remove(jList1.getSelectedIndex());
                this.jList1.setModel(l);
         */       
    }//GEN-LAST:event_jButton3MousePressed

    private void jButton4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MousePressed
        // TODO add your handling code here:
        jTextArea1.setText(null);
        jTextArea1.append("The order of ABERFOYLE PARK is:\n");
        jTextArea1.append("\n");
        jComboBox1.setSelectedIndex(0);
        order_ap = new ArrayList<String>();
        String q = "use roster delete from order_ap";
        sql_database(q);
        order_will = new ArrayList<String>();
        q = "use roster delete from order_will";
        sql_database(q);
        order_wcft = new ArrayList<String>();
        q = "use roster delete from order_wcft";
        sql_database(q);
        order_noar = new ArrayList<String>();
        q = "use roster delete from order_noar";
        sql_database(q);
        jList1.removeAll();
        load_name();
    }//GEN-LAST:event_jButton4MousePressed

    public void load_name() {

        Connection conn = null;
        try {
//        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            // DB d=new DB();
        } catch (java.lang.ClassNotFoundException e) {
            e.printStackTrace();
        }
        //System.out.println("ssssss  ");
        try {
            //conn = DriverManager.getConnection("jdbc:odbc:dbpoolname",  "sa", "123456");  
            conn = DriverManager.getConnection("jdbc:sqlserver://testsql:1433;DatabaseName5=roster", "shahua", "4321");
            System.out.println("connected");
        } catch (SQLException e) {
            System.out.println(e);
        }

        ArrayList<String[]> list = new ArrayList<String[]>();
        String q = "use roster select name from name";
        int j = 0;
        try {
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(q);
            while (rs.next()) {
                j++;
                String note[] = new String[1]; // number of colum which you want to get
                for (int i = 0; i < note.length; i++) {
                    note[i] = (String) rs.getObject(i + 1);
                    //System.out.println(note[i] + "   " + i);
                    //System.out.println(i);
                    note[i] = note[i].trim();
                }
                list.add(note);

            }

            stmt.close();
            conn.close();
            //System.out.println(list.get(0)[0] + "   444");
        } catch (Exception e) {
            System.out.println(e);

        }
        //jComboBox2.addItem("");
        // for (int i = 0; i < list.size(); i++) {
        //     jList1.(list.get(i)[0].trim());
        // }

        for (int i = 0; i < list.size(); i++) {
            if (0 == this.jList1.getModel().getSize()) {
                //新建一个默认项集合
                DefaultListModel listModel = new DefaultListModel();
                //操作这个集合
                listModel.add(0, list.get(i)[0].trim());
                //将这个集合添加到JList中
                this.jList1.setModel(listModel);
            } //JList的项不为空时
            else {
                //从JList中获得这个集合,转换为默认项集合类型
                DefaultListModel listModel = (DefaultListModel) this.jList1.getModel();
                //追加元素
                listModel.add(i, list.get(i)[0].trim());
                //将这个集合添加到JList中
                this.jList1.setModel(listModel);
            }
        }

    }

    void load_order(){
        //get orders from database
        String q = "use roster select name from order_ap";        
        order_ap=order_from_database(q);
        q = "use roster select name from order_will";        
        order_will=order_from_database(q);
        q = "use roster select name from order_wcft";        
        order_wcft=order_from_database(q);
        q = "use roster select name from order_noar";        
        order_noar=order_from_database(q);
        
        //System.out.println(order_will);
        
        //load all staff in list
        load_name();
        
        //shows all orders from database
        jTextArea1.setText(null);
        if (jComboBox1.getSelectedItem().equals("ABERFOYLE PARK")) {
            jTextArea1.append("The order of ABERFOYLE PARK is:\n");
            jTextArea1.append("\n");
            for (int i = 0; i < order_ap.size(); i++) {
                jTextArea1.append(order_ap.get(i));
                jTextArea1.append("\n");
            }
        } else if (jComboBox1.getSelectedItem().equals("WILLUNGA")) {
            jTextArea1.append("The order of WILLUNGA is:\n");
            jTextArea1.append("\n");
            for (int i = 0; i < order_will.size(); i++) {
                jTextArea1.append(order_will.get(i));
                jTextArea1.append("\n");
            }
        } else if (jComboBox1.getSelectedItem().equals("WOODCROFT")) {
            jTextArea1.append("The order of WOODCROFT is:\n");
            jTextArea1.append("\n");
            for (int i = 0; i < order_wcft.size(); i++) {
                jTextArea1.append(order_wcft.get(i));
                jTextArea1.append("\n");
            }
        } else if (jComboBox1.getSelectedItem().equals("NOARLUNGA")) {
            jTextArea1.append("The order of NOARLUNGA is:\n");
            jTextArea1.append("\n");
            for (int i = 0; i < order_noar.size(); i++) {
                jTextArea1.append(order_noar.get(i));
                jTextArea1.append("\n");
            }
        }
        
        //set list (delete all staff who are ordered)
        for(int i=0;i<order_ap.size();i++){
            DefaultListModel l = (DefaultListModel) jList1.getModel();
            if(l.contains(order_ap.get(i))){
                l.removeElement(order_ap.get(i));
                this.jList1.setModel(l);
            }
        }
        
        for(int i=0;i<order_will.size();i++){
            DefaultListModel l = (DefaultListModel) jList1.getModel();
            if(l.contains(order_will.get(i))){
                l.removeElement(order_will.get(i));
                this.jList1.setModel(l);
            }
        }
        
        for(int i=0;i<order_wcft.size();i++){
            DefaultListModel l = (DefaultListModel) jList1.getModel();
            if(l.contains(order_wcft.get(i))){
                l.removeElement(order_wcft.get(i));
                this.jList1.setModel(l);
            }
        }
        
        for(int i=0;i<order_noar.size();i++){
            DefaultListModel l = (DefaultListModel) jList1.getModel();
            if(l.contains(order_noar.get(i))){
                l.removeElement(order_noar.get(i));
                this.jList1.setModel(l);
            }
        }
    }
    
    ArrayList<String> order_from_database(String q){
        Connection conn = null;
        try {
//        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            // DB d=new DB();
        } catch (java.lang.ClassNotFoundException e) {
            e.printStackTrace();
        }
        //System.out.println("ssssss  ");
        try {
            //conn = DriverManager.getConnection("jdbc:odbc:dbpoolname",  "sa", "123456");  
            conn = DriverManager.getConnection("jdbc:sqlserver://testsql:1433;DatabaseName5=roster", "shahua", "4321");
            System.out.println("connected");
        } catch (SQLException e) {
            System.out.println(e);
        }

        ArrayList<String[]> list = new ArrayList<String[]>();
        //String q = "use roster select name from order_ap";
        int j = 0;
        try {
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(q);
            while (rs.next()) {
                j++;
                String note[] = new String[1]; // number of colum which you want to get
                for (int i = 0; i < note.length; i++) {
                    note[i] = (String) rs.getObject(i + 1);
                    //System.out.println(note[i] + "   " + i);
                    //System.out.println(i);
                    note[i] = note[i].trim();
                }
                list.add(note);

            }

            stmt.close();
            conn.close();
            //System.out.println(list.get(0)[0] + "   444");
        } catch (Exception e) {
            System.out.println(e);

        }
        ArrayList<String> order=new ArrayList<String>();
        for(int i=0;i<list.size();i++){
            order.add(list.get(i)[0]);
        }
        return order;
    }
    
    public void sql_database(String q) {

        Connection conn = null;
        try {
//        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            // DB d=new DB();
        } catch (java.lang.ClassNotFoundException e) {
            e.printStackTrace();
        }
        //System.out.println("ssssss  ");
        try {
            //conn = DriverManager.getConnection("jdbc:odbc:dbpoolname",  "sa", "123456");  
            conn = DriverManager.getConnection("jdbc:sqlserver://testsql:1433;DatabaseName5=roster", "shahua", "4321");
            System.out.println("connected");
        } catch (SQLException e) {
            System.out.println(e);
        }

        //String q="insert into users (name, password) values ('Li Gang', '8765')";
        try {
            Statement stmt = conn.createStatement();
            PreparedStatement pstmt = null;
            pstmt = conn.prepareCall(q);
            pstmt.executeUpdate();

            stmt.close();
            conn.close();
            System.out.println("done");
        } catch (Exception e) {
            System.out.println(e);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(orderchanging.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(orderchanging.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(orderchanging.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(orderchanging.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new orderchanging().setVisible(true);
            }
        });
    }

    ArrayList<String> order_ap = new ArrayList<String>();
    ArrayList<String> order_will = new ArrayList<String>();
    ArrayList<String> order_wcft = new ArrayList<String>();
    ArrayList<String> order_noar = new ArrayList<String>();


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
