/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package roster;

import java.io.*;
import java.util.*;
import java.sql.*;

/**
 *
 * @author shahua
 */
public class addstaff extends javax.swing.JFrame {

    /**
     * Creates new form addstaff
     */
    public addstaff() {
        //this.<error> = null;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox20 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox22 = new javax.swing.JCheckBox();
        jCheckBox23 = new javax.swing.JCheckBox();
        jCheckBox24 = new javax.swing.JCheckBox();
        jCheckBox25 = new javax.swing.JCheckBox();
        jCheckBox26 = new javax.swing.JCheckBox();
        jCheckBox27 = new javax.swing.JCheckBox();
        jCheckBox28 = new javax.swing.JCheckBox();
        jCheckBox29 = new javax.swing.JCheckBox();
        jCheckBox30 = new javax.swing.JCheckBox();
        jCheckBox31 = new javax.swing.JCheckBox();
        jCheckBox32 = new javax.swing.JCheckBox();
        jCheckBox33 = new javax.swing.JCheckBox();
        jCheckBox34 = new javax.swing.JCheckBox();
        jCheckBox35 = new javax.swing.JCheckBox();
        jCheckBox36 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenu5.setText("File");
        jMenuBar3.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar3.add(jMenu6);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ABERFOYLE PARK", "WILLUNGA", "WOODCROFT", "NOARLUNGA" }));
        jComboBox1.setToolTipText("");
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "CC", "OFF", "COORD", "AW", "AL", "PL" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setSelectedIndex(0);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jList1KeyReleased(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jCheckBox1.setText("Monday");
        jCheckBox1.setToolTipText("");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });

        jCheckBox2.setText("Tuesday");
        jCheckBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox2ItemStateChanged(evt);
            }
        });
        jCheckBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox2MouseClicked(evt);
            }
        });
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Wednesday");
        jCheckBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox3ItemStateChanged(evt);
            }
        });
        jCheckBox3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox3MouseClicked(evt);
            }
        });

        jCheckBox4.setText("Thursday");
        jCheckBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox4ItemStateChanged(evt);
            }
        });
        jCheckBox4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox4MouseClicked(evt);
            }
        });

        jCheckBox5.setText("Friday");
        jCheckBox5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox5ItemStateChanged(evt);
            }
        });
        jCheckBox5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox5MouseClicked(evt);
            }
        });

        jCheckBox6.setText("Monday");
        jCheckBox6.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox6ItemStateChanged(evt);
            }
        });
        jCheckBox6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox6MouseClicked(evt);
            }
        });

        jCheckBox7.setText("Tuesday");
        jCheckBox7.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox7ItemStateChanged(evt);
            }
        });
        jCheckBox7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox7MouseClicked(evt);
            }
        });

        jCheckBox8.setText("Wednesday");
        jCheckBox8.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox8ItemStateChanged(evt);
            }
        });
        jCheckBox8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox8MouseClicked(evt);
            }
        });

        jCheckBox9.setText("Thursday");
        jCheckBox9.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox9ItemStateChanged(evt);
            }
        });
        jCheckBox9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox9MouseClicked(evt);
            }
        });

        jCheckBox10.setText("Friday");
        jCheckBox10.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox10ItemStateChanged(evt);
            }
        });
        jCheckBox10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox10MouseClicked(evt);
            }
        });

        jCheckBox11.setText("Monday");
        jCheckBox11.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox11ItemStateChanged(evt);
            }
        });
        jCheckBox11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox11MouseClicked(evt);
            }
        });

        jCheckBox13.setText("Tuesday");
        jCheckBox13.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox13ItemStateChanged(evt);
            }
        });
        jCheckBox13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox13MouseClicked(evt);
            }
        });

        jCheckBox14.setText("Wednesday");
        jCheckBox14.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox14ItemStateChanged(evt);
            }
        });
        jCheckBox14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox14MouseClicked(evt);
            }
        });

        jCheckBox15.setText("Thursday");
        jCheckBox15.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox15ItemStateChanged(evt);
            }
        });
        jCheckBox15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox15MouseClicked(evt);
            }
        });

        jCheckBox16.setText("Friday");
        jCheckBox16.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox16ItemStateChanged(evt);
            }
        });
        jCheckBox16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox16MouseClicked(evt);
            }
        });

        jCheckBox17.setText("Monday");
        jCheckBox17.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox17ItemStateChanged(evt);
            }
        });
        jCheckBox17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox17MouseClicked(evt);
            }
        });

        jCheckBox18.setText("Tuesday");
        jCheckBox18.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox18ItemStateChanged(evt);
            }
        });
        jCheckBox18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox18MouseClicked(evt);
            }
        });

        jCheckBox19.setText("Wednesday");
        jCheckBox19.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox19ItemStateChanged(evt);
            }
        });
        jCheckBox19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox19MouseClicked(evt);
            }
        });

        jCheckBox20.setText("Thursday");
        jCheckBox20.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox20ItemStateChanged(evt);
            }
        });
        jCheckBox20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox20MouseClicked(evt);
            }
        });

        jCheckBox21.setText("Friday");
        jCheckBox21.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox21ItemStateChanged(evt);
            }
        });
        jCheckBox21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox21MouseClicked(evt);
            }
        });

        jCheckBox12.setText("CC1");
        jCheckBox12.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox12ItemStateChanged(evt);
            }
        });
        jCheckBox12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox12MouseClicked(evt);
            }
        });

        jCheckBox22.setText("CC2");
        jCheckBox22.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox22ItemStateChanged(evt);
            }
        });
        jCheckBox22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox22MouseClicked(evt);
            }
        });

        jCheckBox23.setText("CC3");
        jCheckBox23.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox23ItemStateChanged(evt);
            }
        });
        jCheckBox23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox23MouseClicked(evt);
            }
        });

        jCheckBox24.setText("CC4");
        jCheckBox24.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox24ItemStateChanged(evt);
            }
        });
        jCheckBox24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox24MouseClicked(evt);
            }
        });

        jCheckBox25.setText("CC5");
        jCheckBox25.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox25ItemStateChanged(evt);
            }
        });
        jCheckBox25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox25MouseClicked(evt);
            }
        });

        jCheckBox26.setText("CC6");
        jCheckBox26.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox26ItemStateChanged(evt);
            }
        });
        jCheckBox26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox26MouseClicked(evt);
            }
        });

        jCheckBox27.setText("CC7");
        jCheckBox27.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox27ItemStateChanged(evt);
            }
        });
        jCheckBox27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox27MouseClicked(evt);
            }
        });

        jCheckBox28.setText("CC8");
        jCheckBox28.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox28ItemStateChanged(evt);
            }
        });
        jCheckBox28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox28MouseClicked(evt);
            }
        });

        jCheckBox29.setText("CC9");
        jCheckBox29.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox29ItemStateChanged(evt);
            }
        });
        jCheckBox29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox29MouseClicked(evt);
            }
        });

        jCheckBox30.setText("FC1");
        jCheckBox30.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox30ItemStateChanged(evt);
            }
        });
        jCheckBox30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox30MouseClicked(evt);
            }
        });

        jCheckBox31.setText("FC2");
        jCheckBox31.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox31ItemStateChanged(evt);
            }
        });
        jCheckBox31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox31MouseClicked(evt);
            }
        });

        jCheckBox32.setText("FC3");
        jCheckBox32.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox32ItemStateChanged(evt);
            }
        });
        jCheckBox32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox32MouseClicked(evt);
            }
        });

        jCheckBox33.setText("CCB");
        jCheckBox33.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox33ItemStateChanged(evt);
            }
        });
        jCheckBox33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox33MouseClicked(evt);
            }
        });

        jCheckBox34.setText("FC2N");
        jCheckBox34.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox34ItemStateChanged(evt);
            }
        });
        jCheckBox34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox34MouseClicked(evt);
            }
        });

        jCheckBox35.setText("FC2CC");
        jCheckBox35.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox35ItemStateChanged(evt);
            }
        });
        jCheckBox35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox35MouseClicked(evt);
            }
        });

        jCheckBox36.setText("FC2BU");
        jCheckBox36.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox36ItemStateChanged(evt);
            }
        });
        jCheckBox36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox36MouseClicked(evt);
            }
        });

        jButton1.setText("save");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("reset");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("name");

        jLabel2.setText("Prefer");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Base Day", "Nonbase Day" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList2.setSelectedIndex(0);
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jList2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jList2KeyReleased(evt);
            }
        });
        jList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList2ValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jList2);

        jList3.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "ABERFOYLE PARK", "WILLUNGA", "WOODCROFT", "NOARLUNGA" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList3.setSelectedIndex(0);
        jList3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList3MouseClicked(evt);
            }
        });
        jList3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jList3KeyReleased(evt);
            }
        });
        jList3.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList3ValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(jList3);

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenu4.setToolTipText("");
        jMenu4.setName(""); // NOI18N

        jMenuItem1.setText("Add Special");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMenuItem1MouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem1MousePressed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(8, 8, 8))
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox6)
                                    .addComponent(jCheckBox11)
                                    .addComponent(jCheckBox1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckBox7)
                                        .addComponent(jCheckBox13, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(jCheckBox2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox8)
                                    .addComponent(jCheckBox14)
                                    .addComponent(jCheckBox3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox15)
                                    .addComponent(jCheckBox9)
                                    .addComponent(jCheckBox4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox10)
                                    .addComponent(jCheckBox16)
                                    .addComponent(jCheckBox5)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox21))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox24, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jCheckBox12, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jCheckBox27))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCheckBox22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBox23)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCheckBox30)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCheckBox31))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCheckBox25)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBox26)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCheckBox33)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox36)
                                    .addComponent(jCheckBox35)
                                    .addComponent(jCheckBox32)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCheckBox28)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBox29)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jCheckBox34))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCheckBox5)
                                    .addComponent(jCheckBox4)
                                    .addComponent(jCheckBox3)
                                    .addComponent(jCheckBox2)
                                    .addComponent(jCheckBox1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCheckBox6)
                                    .addComponent(jCheckBox7)
                                    .addComponent(jCheckBox8)
                                    .addComponent(jCheckBox9)
                                    .addComponent(jCheckBox10))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jCheckBox13)
                                        .addComponent(jCheckBox14)
                                        .addComponent(jCheckBox15)
                                        .addComponent(jCheckBox16))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox11)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCheckBox17)
                                    .addComponent(jCheckBox18)
                                    .addComponent(jCheckBox19)
                                    .addComponent(jCheckBox20)
                                    .addComponent(jCheckBox21)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(90, 90, 90)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(119, 119, 119)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jCheckBox12)
                                            .addComponent(jCheckBox22)
                                            .addComponent(jCheckBox23)
                                            .addComponent(jCheckBox30)
                                            .addComponent(jCheckBox31)
                                            .addComponent(jCheckBox32))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jCheckBox24)
                                            .addComponent(jCheckBox25)
                                            .addComponent(jCheckBox26)
                                            .addComponent(jCheckBox33)
                                            .addComponent(jCheckBox36)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(126, 126, 126)
                                        .addComponent(jLabel2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCheckBox27)
                                    .addComponent(jCheckBox28)
                                    .addComponent(jCheckBox29)
                                    .addComponent(jCheckBox34)
                                    .addComponent(jCheckBox35)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
        if (working_day[1] != null) {
            if (working_day[1].isEmpty()) {
                jCheckBox1.setSelected(false);
                jCheckBox1.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[1])) {
                jCheckBox1.setEnabled(true);
            } else {
                jCheckBox1.setSelected(true);
                jCheckBox1.setEnabled(false);
            }
        }
        if (working_day[2] != null) {
            if (working_day[2].isEmpty()) {
                jCheckBox2.setSelected(false);
                jCheckBox2.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[2])) {
                jCheckBox2.setEnabled(true);
            } else {
                jCheckBox2.setSelected(true);
                jCheckBox2.setEnabled(false);
            }
        }
        if (working_day[3] != null) {
            if (working_day[3].isEmpty()) {
                jCheckBox3.setSelected(false);
                jCheckBox3.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[3])) {
                jCheckBox3.setEnabled(true);
            } else {
                jCheckBox3.setSelected(true);
                jCheckBox3.setEnabled(false);
            }
        }
        if (working_day[4] != null) {
            if (working_day[4].isEmpty()) {
                jCheckBox4.setSelected(false);
                jCheckBox4.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[4])) {
                jCheckBox4.setEnabled(true);
            } else {
                jCheckBox4.setSelected(true);
                jCheckBox4.setEnabled(false);
            }
        }
        if (working_day[5] != null) {
            if (working_day[5].isEmpty()) {
                jCheckBox5.setSelected(false);
                jCheckBox5.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[5])) {
                jCheckBox5.setEnabled(true);
            } else {
                jCheckBox5.setSelected(true);
                jCheckBox5.setEnabled(false);
            }
        }
        if (working_day[6] != null) {
            if (working_day[6].isEmpty()) {
                jCheckBox6.setSelected(false);
                jCheckBox6.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[6])) {
                jCheckBox6.setEnabled(true);
            } else {
                jCheckBox6.setSelected(true);
                jCheckBox6.setEnabled(false);
            }
        }
        if (working_day[7] != null) {
            if (working_day[7].isEmpty()) {
                jCheckBox7.setSelected(false);
                jCheckBox7.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[7])) {
                jCheckBox7.setEnabled(true);
            } else {
                jCheckBox7.setSelected(true);
                jCheckBox7.setEnabled(false);
            }
        }
        if (working_day[8] != null) {
            if (working_day[8].isEmpty()) {
                jCheckBox8.setSelected(false);
                jCheckBox8.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[8])) {
                jCheckBox8.setEnabled(true);
            } else {
                jCheckBox8.setSelected(true);
                jCheckBox8.setEnabled(false);
            }
        }
        if (working_day[9] != null) {
            if (working_day[9].isEmpty()) {
                jCheckBox9.setSelected(false);
                jCheckBox9.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[9])) {
                jCheckBox9.setEnabled(true);
            } else {
                jCheckBox9.setSelected(true);
                jCheckBox9.setEnabled(false);
            }
        }
        if (working_day[10] != null) {
            if (working_day[10].isEmpty()) {
                jCheckBox10.setSelected(false);
                jCheckBox10.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[10])) {
                jCheckBox10.setEnabled(true);
            } else {
                jCheckBox10.setSelected(true);
                jCheckBox10.setEnabled(false);
            }
        }
        if (working_day[11] != null) {
            if (working_day[11].isEmpty()) {
                jCheckBox11.setSelected(false);
                jCheckBox11.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[11])) {
                jCheckBox11.setEnabled(true);
            } else {
                jCheckBox11.setSelected(true);
                jCheckBox11.setEnabled(false);
            }
        }
        if (working_day[12] != null) {
            if (working_day[12].isEmpty()) {
                jCheckBox13.setSelected(false);
                jCheckBox13.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[12])) {
                jCheckBox13.setEnabled(true);
            } else {
                jCheckBox13.setSelected(true);
                jCheckBox13.setEnabled(false);
            }
        }
        if (working_day[13] != null) {
            if (working_day[13].isEmpty()) {
                jCheckBox14.setSelected(false);
                jCheckBox14.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[13])) {
                jCheckBox14.setEnabled(true);
            } else {
                jCheckBox14.setSelected(true);
                jCheckBox14.setEnabled(false);
            }
        }
        if (working_day[14] != null) {
            if (working_day[14].isEmpty()) {
                jCheckBox15.setSelected(false);
                jCheckBox15.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[14])) {
                jCheckBox15.setEnabled(true);
            } else {
                jCheckBox15.setSelected(true);
                jCheckBox15.setEnabled(false);
            }
        }
        if (working_day[15] != null) {
            if (working_day[15].isEmpty()) {
                jCheckBox16.setSelected(false);
                jCheckBox16.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[15])) {
                jCheckBox16.setEnabled(true);
            } else {
                jCheckBox16.setSelected(true);
                jCheckBox16.setEnabled(false);
            }
        }
        if (working_day[16] != null) {
            if (working_day[16].isEmpty()) {
                jCheckBox17.setSelected(false);
                jCheckBox17.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[16])) {
                jCheckBox17.setEnabled(true);
            } else {
                jCheckBox17.setSelected(true);
                jCheckBox17.setEnabled(false);
            }
        }
        if (working_day[17] != null) {
            if (working_day[17].isEmpty()) {
                jCheckBox18.setSelected(false);
                jCheckBox18.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[17])) {
                jCheckBox18.setEnabled(true);
            } else {
                jCheckBox18.setSelected(true);
                jCheckBox18.setEnabled(false);
            }
        }
        if (working_day[18] != null) {
            if (working_day[18].isEmpty()) {
                jCheckBox19.setSelected(false);
                jCheckBox19.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[18])) {
                jCheckBox19.setEnabled(true);
            } else {
                jCheckBox19.setSelected(true);
                jCheckBox19.setEnabled(false);
            }
        }
        if (working_day[19] != null) {
            if (working_day[19].isEmpty()) {
                jCheckBox20.setSelected(false);
                jCheckBox20.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[19])) {
                jCheckBox20.setEnabled(true);
            } else {
                jCheckBox20.setSelected(true);
                jCheckBox20.setEnabled(false);
            }
        }
        if (working_day[20] != null) {
            if (working_day[20].isEmpty()) {
                jCheckBox21.setSelected(false);
                jCheckBox21.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[20])) {
                jCheckBox21.setEnabled(true);
            } else {
                jCheckBox21.setSelected(true);
                jCheckBox21.setEnabled(false);
            }
        }

    }//GEN-LAST:event_jList1ValueChanged

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jList1MouseClicked

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
       // TODO add your handling code here:

        // jTextArea1.append(working_day[1] + "   "+((String)jList1.getSelectedValue())+"\n");
        if (jCheckBox1.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[1])) {
            working_day[1] = (String) jList1.getSelectedValue();

        } else {
            working_day[1] = null;
        }
    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        jTextArea1.setText(null);
        jTextField1.setText("");
        jList1.setSelectedIndex(0);
        jList2.setSelectedIndex(0);
        jList3.setSelectedIndex(0);
        jComboBox1.setSelectedIndex(0);
        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
        jCheckBox3.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox5.setSelected(false);
        jCheckBox6.setSelected(false);
        jCheckBox7.setSelected(false);
        jCheckBox8.setSelected(false);
        jCheckBox9.setSelected(false);
        jCheckBox10.setSelected(false);
        jCheckBox11.setSelected(false);
        jCheckBox12.setSelected(false);
        jCheckBox13.setSelected(false);
        jCheckBox14.setSelected(false);
        jCheckBox15.setSelected(false);
        jCheckBox16.setSelected(false);
        jCheckBox17.setSelected(false);
        jCheckBox18.setSelected(false);
        jCheckBox19.setSelected(false);
        jCheckBox20.setSelected(false);
        jCheckBox21.setSelected(false);
        jCheckBox22.setSelected(false);
        jCheckBox23.setSelected(false);
        jCheckBox24.setSelected(false);
        jCheckBox25.setSelected(false);
        jCheckBox26.setSelected(false);
        jCheckBox27.setSelected(false);
        jCheckBox28.setSelected(false);
        jCheckBox29.setSelected(false);
        jCheckBox30.setSelected(false);
        jCheckBox31.setSelected(false);
        jCheckBox32.setSelected(false);
        jCheckBox33.setSelected(false);
        jCheckBox34.setSelected(false);
        jCheckBox35.setSelected(false);
        jCheckBox36.setSelected(false);
        jCheckBox1.setEnabled(true);
        jCheckBox2.setEnabled(true);
        jCheckBox3.setEnabled(true);
        jCheckBox4.setEnabled(true);
        jCheckBox5.setEnabled(true);
        jCheckBox6.setEnabled(true);
        jCheckBox7.setEnabled(true);
        jCheckBox8.setEnabled(true);
        jCheckBox9.setEnabled(true);
        jCheckBox10.setEnabled(true);
        jCheckBox11.setEnabled(true);
        jCheckBox12.setEnabled(true);
        jCheckBox13.setEnabled(true);
        jCheckBox14.setEnabled(true);
        jCheckBox15.setEnabled(true);
        jCheckBox16.setEnabled(true);
        jCheckBox17.setEnabled(true);
        jCheckBox18.setEnabled(true);
        jCheckBox19.setEnabled(true);
        jCheckBox20.setEnabled(true);
        jCheckBox21.setEnabled(true);
        jCheckBox22.setEnabled(true);
        jCheckBox23.setEnabled(true);
        jCheckBox24.setEnabled(true);
        jCheckBox25.setEnabled(true);
        jCheckBox26.setEnabled(true);
        jCheckBox27.setEnabled(true);
        jCheckBox28.setEnabled(true);
        jCheckBox29.setEnabled(true);
        jCheckBox30.setEnabled(true);
        jCheckBox31.setEnabled(true);
        jCheckBox32.setEnabled(true);
        jCheckBox33.setEnabled(true);
        jCheckBox34.setEnabled(true);
        jCheckBox35.setEnabled(true);
        jCheckBox36.setEnabled(true);
        jButton1.setEnabled(true);
        //jTextArea1.append("remove");

        //?
        positions_baseday = new ArrayList<String>();  //should be [][]

        base = new ArrayList<ArrayList<String>>();     //the positions of base or nonbase day in each location
        nonbase = new ArrayList<ArrayList<String>>();
        for (int i = 0; i < 4; i++)// 4 locations
        {
            base.add(new ArrayList<String>());
            nonbase.add(new ArrayList<String>());
        }

        name = "";      //person's name 
        location = "";  //get location from list

        //all information about the person
        working_day = new String[21]; //the base day or nonbase...
        //int amount_position=16; //number of position (cc1 cc2 ...)

    }//GEN-LAST:event_jButton2MouseClicked

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox2MouseClicked
        // TODO add your handling code here:
        if (jCheckBox2.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[2])) {
            working_day[2] = (String) jList1.getSelectedValue();

        } else {
            working_day[2] = null;
        }
    }//GEN-LAST:event_jCheckBox2MouseClicked

    private void jCheckBox3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox3MouseClicked
        // TODO add your handling code here:
        if (jCheckBox3.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[3])) {
            working_day[3] = (String) jList1.getSelectedValue();

        } else {
            working_day[3] = null;
        }
    }//GEN-LAST:event_jCheckBox3MouseClicked

    private void jCheckBox4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox4MouseClicked
        // TODO add your handling code here:
        if (jCheckBox4.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[4])) {
            working_day[4] = (String) jList1.getSelectedValue();

        } else {
            working_day[4] = null;
        }

    }//GEN-LAST:event_jCheckBox4MouseClicked

    private void jCheckBox5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox5MouseClicked
        // TODO add your handling code here:
        if (jCheckBox5.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[5])) {
            working_day[5] = (String) jList1.getSelectedValue();

        } else {
            working_day[5] = null;
        }
    }//GEN-LAST:event_jCheckBox5MouseClicked

    private void jCheckBox6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox6MouseClicked
        // TODO add your handling code here:
        if (jCheckBox6.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[6])) {
            working_day[6] = (String) jList1.getSelectedValue();

        } else {
            working_day[6] = null;
        }
    }//GEN-LAST:event_jCheckBox6MouseClicked

    private void jCheckBox7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox7MouseClicked
        // TODO add your handling code here:
        if (jCheckBox7.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[7])) {
            working_day[7] = (String) jList1.getSelectedValue();

        } else {
            working_day[7] = null;
        }
    }//GEN-LAST:event_jCheckBox7MouseClicked

    private void jCheckBox8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox8MouseClicked
        // TODO add your handling code here:
        if (jCheckBox8.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[8])) {
            working_day[8] = (String) jList1.getSelectedValue();

        } else {
            working_day[8] = null;
        }
    }//GEN-LAST:event_jCheckBox8MouseClicked

    private void jCheckBox9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox9MouseClicked
        // TODO add your handling code here:
        if (jCheckBox9.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[9])) {
            working_day[9] = (String) jList1.getSelectedValue();

        } else {
            working_day[9] = null;
        }
    }//GEN-LAST:event_jCheckBox9MouseClicked

    private void jCheckBox10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox10MouseClicked
        // TODO add your handling code here:
        if (jCheckBox10.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[10])) {
            working_day[10] = (String) jList1.getSelectedValue();

        } else {
            working_day[10] = null;
        }
    }//GEN-LAST:event_jCheckBox10MouseClicked

    private void jList1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyReleased
        // TODO add your handling code here:
        if (working_day[1] != null) {
            if (working_day[1].isEmpty()) {
                jCheckBox1.setSelected(false);
                jCheckBox1.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[1])) {
                jCheckBox1.setEnabled(true);
            } else {
                jCheckBox1.setSelected(true);
                jCheckBox1.setEnabled(false);
            }
        }
        if (working_day[2] != null) {
            if (working_day[2].isEmpty()) {
                jCheckBox2.setSelected(false);
                jCheckBox2.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[2])) {
                jCheckBox2.setEnabled(true);
            } else {
                jCheckBox2.setSelected(true);
                jCheckBox2.setEnabled(false);
            }
        }
        if (working_day[3] != null) {
            if (working_day[3].isEmpty()) {
                jCheckBox3.setSelected(false);
                jCheckBox3.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[3])) {
                jCheckBox3.setEnabled(true);
            } else {
                jCheckBox3.setSelected(true);
                jCheckBox3.setEnabled(false);
            }
        }
        if (working_day[4] != null) {
            if (working_day[4].isEmpty()) {
                jCheckBox4.setSelected(false);
                jCheckBox4.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[4])) {
                jCheckBox4.setEnabled(true);
            } else {
                jCheckBox4.setSelected(true);
                jCheckBox4.setEnabled(false);
            }
        }
        if (working_day[5] != null) {
            if (working_day[5].isEmpty()) {
                jCheckBox5.setSelected(false);
                jCheckBox5.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[5])) {
                jCheckBox5.setEnabled(true);
            } else {
                jCheckBox5.setSelected(true);
                jCheckBox5.setEnabled(false);
            }
        }
        if (working_day[6] != null) {
            if (working_day[6].isEmpty()) {
                jCheckBox6.setSelected(false);
                jCheckBox6.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[6])) {
                jCheckBox6.setEnabled(true);
            } else {
                jCheckBox6.setSelected(true);
                jCheckBox6.setEnabled(false);
            }
        }
        if (working_day[7] != null) {
            if (working_day[7].isEmpty()) {
                jCheckBox7.setSelected(false);
                jCheckBox7.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[7])) {
                jCheckBox7.setEnabled(true);
            } else {
                jCheckBox7.setSelected(true);
                jCheckBox7.setEnabled(false);
            }
        }
        if (working_day[8] != null) {
            if (working_day[8].isEmpty()) {
                jCheckBox8.setSelected(false);
                jCheckBox8.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[8])) {
                jCheckBox8.setEnabled(true);
            } else {
                jCheckBox8.setSelected(true);
                jCheckBox8.setEnabled(false);
            }
        }
        if (working_day[9] != null) {
            if (working_day[9].isEmpty()) {
                jCheckBox9.setSelected(false);
                jCheckBox9.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[9])) {
                jCheckBox9.setEnabled(true);
            } else {
                jCheckBox9.setSelected(true);
                jCheckBox9.setEnabled(false);
            }
        }
        if (working_day[10] != null) {
            if (working_day[10].isEmpty()) {
                jCheckBox10.setSelected(false);
                jCheckBox10.setEnabled(true);
            } else if (((String) jList1.getSelectedValue()).equals(working_day[10])) {
                jCheckBox10.setEnabled(true);
            } else {
                jCheckBox10.setSelected(true);
                jCheckBox10.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jList1KeyReleased

    private void jList2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList2KeyReleased
        // TODO add your handling code here:
        //set position

    }//GEN-LAST:event_jList2KeyReleased

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jList2MouseClicked

    private void jList3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList3KeyReleased
        // TODO add your handling code here:


    }//GEN-LAST:event_jList3KeyReleased

    private void jCheckBox12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox12MouseClicked
        // TODO add your handling code here:

        ////// pan duan zhi kong!!!!!!!!!!!!!!
        //System.out.println(base.get(jList3.getSelectedIndex()).size());
        if (jCheckBox12.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                //System.out.println(base.size());
                base.get(jList3.getSelectedIndex()).add("CC1");
               // System.out.println(base.get(jList3.getSelectedIndex()).get(base.get(jList3.getSelectedIndex()).size()-1)+"    "+jList3.getSelectedIndex());
                // System.out.println(base.get(jList3.getSelectedIndex()).get(base.get(jList3.getSelectedIndex()).size()-1));
            }

            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("CC1");
            }

        }

        if (!jCheckBox12.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("CC1");

            }

            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("CC1");
            }
        }
    }//GEN-LAST:event_jCheckBox12MouseClicked

    private void jCheckBox22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox22MouseClicked
        // TODO add your handling code here:
        if (jCheckBox22.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("CC2");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("CC2");
            }
        }

        if (!jCheckBox22.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("CC2");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("CC2");
            }
        }

    }//GEN-LAST:event_jCheckBox22MouseClicked

    private void jCheckBox23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox23MouseClicked
        // TODO add your handling code here:
        if (jCheckBox23.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("CC3");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("CC3");
            }
        }

        if (!jCheckBox23.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("CC3");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("CC3");
            }
        }

    }//GEN-LAST:event_jCheckBox23MouseClicked

    private void jList3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList3MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jList3MouseClicked

    private void jCheckBox24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox24MouseClicked
        // TODO add your handling code here:
        if (jCheckBox24.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("CC4");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("CC4");
            }
        }

        if (!jCheckBox24.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("CC4");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("CC4");
            }
        }
    }//GEN-LAST:event_jCheckBox24MouseClicked

    private void jCheckBox25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox25MouseClicked
        // TODO add your handling code here:
        if (jCheckBox25.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("CC5");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("CC5");
            }
        }

        if (!jCheckBox25.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("CC5");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("CC5");
            }
        }

    }//GEN-LAST:event_jCheckBox25MouseClicked

    private void jCheckBox26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox26MouseClicked
        // TODO add your handling code here:
        if (jCheckBox26.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("CC6");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("CC6");
            }
        }

        if (!jCheckBox26.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("CC6");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("CC6");
            }
        }

    }//GEN-LAST:event_jCheckBox26MouseClicked

    private void jCheckBox27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox27MouseClicked
        // TODO add your handling code here:
        if (jCheckBox27.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("CC7");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("CC7");
            }
        }

        if (!jCheckBox27.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("CC7");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("CC7");
            }
        }

    }//GEN-LAST:event_jCheckBox27MouseClicked

    private void jCheckBox28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox28MouseClicked
        // TODO add your handling code here:
        if (jCheckBox28.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("CC8");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("CC8");
            }
        }

        if (!jCheckBox28.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("CC8");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("CC8");
            }
        }

    }//GEN-LAST:event_jCheckBox28MouseClicked

    private void jCheckBox29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox29MouseClicked
        // TODO add your handling code here:
        if (jCheckBox29.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("CC9");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("CC9");
            }
        }

        if (!jCheckBox29.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("CC9");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("CC9");
            }
        }

    }//GEN-LAST:event_jCheckBox29MouseClicked

    private void jCheckBox11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox11MouseClicked
        // TODO add your handling code here:
        if (jCheckBox11.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[11])) {
            working_day[11] = (String) jList1.getSelectedValue();

        } else {
            working_day[11] = null;
        }
    }//GEN-LAST:event_jCheckBox11MouseClicked

    private void jCheckBox13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox13MouseClicked
        // TODO add your handling code here:
        if (jCheckBox13.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[12])) {
            working_day[12] = (String) jList1.getSelectedValue();

        } else {
            working_day[12] = null;
        }
    }//GEN-LAST:event_jCheckBox13MouseClicked

    private void jCheckBox14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox14MouseClicked
        // TODO add your handling code here:
        if (jCheckBox14.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[13])) {
            working_day[13] = (String) jList1.getSelectedValue();

        } else {
            working_day[13] = null;
        }
    }//GEN-LAST:event_jCheckBox14MouseClicked

    private void jCheckBox15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox15MouseClicked
        // TODO add your handling code here:
        if (jCheckBox15.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[14])) {
            working_day[14] = (String) jList1.getSelectedValue();

        } else {
            working_day[14] = null;
        }
    }//GEN-LAST:event_jCheckBox15MouseClicked

    private void jCheckBox16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox16MouseClicked
        // TODO add your handling code here:
        if (jCheckBox16.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[15])) {
            working_day[15] = (String) jList1.getSelectedValue();

        } else {
            working_day[15] = null;
        }
    }//GEN-LAST:event_jCheckBox16MouseClicked

    private void jCheckBox17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox17MouseClicked
        // TODO add your handling code here:
        if (jCheckBox17.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[16])) {
            working_day[16] = (String) jList1.getSelectedValue();

        } else {
            working_day[16] = null;
        }
    }//GEN-LAST:event_jCheckBox17MouseClicked

    private void jCheckBox18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox18MouseClicked
        // TODO add your handling code here:
        if (jCheckBox18.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[17])) {
            working_day[17] = (String) jList1.getSelectedValue();

        } else {
            working_day[17] = null;
        }

    }//GEN-LAST:event_jCheckBox18MouseClicked

    private void jCheckBox19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox19MouseClicked
        // TODO add your handling code here:
        if (jCheckBox19.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[18])) {
            working_day[18] = (String) jList1.getSelectedValue();

        } else {
            working_day[18] = null;
        }
    }//GEN-LAST:event_jCheckBox19MouseClicked

    private void jCheckBox20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox20MouseClicked
        // TODO add your handling code here:
        if (jCheckBox20.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[19])) {
            working_day[19] = (String) jList1.getSelectedValue();

        } else {
            working_day[19] = null;
        }
    }//GEN-LAST:event_jCheckBox20MouseClicked

    private void jCheckBox21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox21MouseClicked
        // TODO add your handling code here:
        if (jCheckBox21.isSelected() || !((String) jList1.getSelectedValue()).equals(working_day[20])) {
            working_day[20] = (String) jList1.getSelectedValue();

        } else {
            working_day[20] = null;
        }

    }//GEN-LAST:event_jCheckBox21MouseClicked

    private void jCheckBox30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox30MouseClicked
        // TODO add your handling code here:
        if (jCheckBox30.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("FC1");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("FC1");
            }
        }

        if (!jCheckBox30.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("FC1");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("FC1");
            }
        }

    }//GEN-LAST:event_jCheckBox30MouseClicked

    private void jCheckBox31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox31MouseClicked
        // TODO add your handling code here:
        if (jCheckBox31.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("FC2");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("FC2");
            }
        }

        if (!jCheckBox31.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("FC2");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("FC2");
            }
        }
    }//GEN-LAST:event_jCheckBox31MouseClicked

    private void jCheckBox32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox32MouseClicked
        // TODO add your handling code here:
        if (jCheckBox32.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("FC3");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("FC3");
            }
        }

        if (!jCheckBox32.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("FC3");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("FC3");
            }
        }

    }//GEN-LAST:event_jCheckBox32MouseClicked

    private void jCheckBox33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox33MouseClicked
        // TODO add your handling code here:
        if (jCheckBox33.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("CCB");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("CCB");
            }
        }

        if (!jCheckBox33.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("CCB");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("CCB");
            }
        }

    }//GEN-LAST:event_jCheckBox33MouseClicked

    private void jCheckBox36MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox36MouseClicked
        // TODO add your handling code here:
        if (jCheckBox36.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("FC2BU");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("FC2BU");
            }
        }

        if (!jCheckBox36.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("FC2BU");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("FC2BU");
            }
        }

    }//GEN-LAST:event_jCheckBox36MouseClicked

    private void jCheckBox34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox34MouseClicked
        // TODO add your handling code here:
        if (jCheckBox34.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("FC2N");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("FC2N");
            }
        }

        if (!jCheckBox34.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("FC2N");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("FC2N");
            }
        }

    }//GEN-LAST:event_jCheckBox34MouseClicked

    private void jCheckBox35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox35MouseClicked
        if (jCheckBox35.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).add("FC2CC");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).add("FC2CC");
            }
        }

        if (!jCheckBox35.isSelected()) {
            if (((String) jList2.getSelectedValue()).equals("Base Day")) {
                base.get(jList3.getSelectedIndex()).remove("FC2CC");
            }
            if (((String) jList2.getSelectedValue()).equals("Nonbase Day")) {
                nonbase.get(jList3.getSelectedIndex()).remove("FC2CC");
            }
        }        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox35MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        if (!jTextField1.getText().isEmpty()) {

            name = jTextField1.getText();
            location = (String) jComboBox1.getSelectedItem();
            baseday = new individual_availble(all_locations, base);
            nonbaseday = new individual_availble(all_locations, nonbase);
            person = new individual(name, location, working_day, baseday, nonbaseday);

            jTextArea1.append(person.get_name() + "\n");
            jTextArea1.append(person.get_location() + "\n");
            for (int i = 1; i < person.workingday.length; i++) {
                jTextArea1.append(person.workingday[i] + " ");
            }
            jTextArea1.append("\n");

            for (int i = 0; i < person.baseday.position.size(); i++) {
                jTextArea1.append(person.baseday.location.get(i) + "  \n");
                for (int j = 0; j < person.baseday.position.get(i).size(); j++) {
                    jTextArea1.append(person.baseday.position.get(i).get(j) + " ");
                }
                jTextArea1.append("\n");
            }

            //look the results
            for (int i = 1; i < working_day.length; i++) {
                jTextArea1.append(working_day[i] + " ");
            }
            jTextArea1.append("\n");
            jTextArea1.append(working_day.length + " ");
        //jTextArea1.append(working_day[20]+" ");

            //save into database
            String q = new String();

            //insert basicworkingday
            for (int i = 1; i <= 20; i++) {
                q = q + "'" + person.workingday[i] + "'";
                if (i < 20) {
                    q = q + ",";
                }
            }
            q = "use roster insert into basicworkingday (name, mon_w1, tue_w1, wed_w1, thur_w1, fri_w1, mon_w2, tue_w2, wed_w2, thur_w2, fri_w2, mon_w3, tue_w3, wed_w3, thur_w3, fri_w3, mon_w4, tue_w4, wed_w4, thur_w4, fri_w4) values ('" + person.name + "'," + q + ")";
            //System.out.println(q);
            insert(q);

            //insert name
            q = "use roster insert into name (name, location) values ('" + person.name + "', '" + person.location + "')";
            //System.out.println(q);
            insert(q);

            //insert baseday_ap
            q = "";
            q = query(0);
            q = "use roster insert into baseday_ap (name,cc1,cc2,cc3,cc4,cc5,cc6,cc7,cc8,cc9,fc1,fc2,fc3,ccb,fc2n,fc2cc,fc2bu) values ('" + person.name + "'," + q + ")";
            //System.out.println(q);
            insert(q);
            //q="use roster insert into name (name, location) values ('"+person.name+"', '"+person.location+"')";
            q = "";
            q = query(1);
            q = "use roster insert into baseday_will (name,cc1,cc2,cc3,cc4,cc5,cc6,cc7,cc8,cc9,fc1,fc2,fc3,ccb,fc2n,fc2cc,fc2bu) values ('" + person.name + "'," + q + ")";
            insert(q);

            q = "";
            q = query(2);
            q = "use roster insert into baseday_wcft (name,cc1,cc2,cc3,cc4,cc5,cc6,cc7,cc8,cc9,fc1,fc2,fc3,ccb,fc2n,fc2cc,fc2bu) values ('" + person.name + "'," + q + ")";
            insert(q);

            q = "";
            q = query(3);
            q = "use roster insert into baseday_noar (name,cc1,cc2,cc3,cc4,cc5,cc6,cc7,cc8,cc9,fc1,fc2,fc3,ccb,fc2n,fc2cc,fc2bu) values ('" + person.name + "'," + q + ")";
            insert(q);

            q = "";
            q = non_query(0);
            q = "use roster insert into nonbaseday_ap (name,cc1,cc2,cc3,cc4,cc5,cc6,cc7,cc8,cc9,fc1,fc2,fc3,ccb,fc2n,fc2cc,fc2bu) values ('" + person.name + "'," + q + ")";
            //System.out.println(q);
            insert(q);

            q = "";
            q = non_query(1);
            q = "use roster insert into nonbaseday_will (name,cc1,cc2,cc3,cc4,cc5,cc6,cc7,cc8,cc9,fc1,fc2,fc3,ccb,fc2n,fc2cc,fc2bu) values ('" + person.name + "'," + q + ")";
            insert(q);

            q = "";
            q = non_query(2);
            q = "use roster insert into nonbaseday_wcft (name,cc1,cc2,cc3,cc4,cc5,cc6,cc7,cc8,cc9,fc1,fc2,fc3,ccb,fc2n,fc2cc,fc2bu) values ('" + person.name + "'," + q + ")";
            insert(q);

            q = "";
            q = non_query(3);
            q = "use roster insert into nonbaseday_noar (name,cc1,cc2,cc3,cc4,cc5,cc6,cc7,cc8,cc9,fc1,fc2,fc3,ccb,fc2n,fc2cc,fc2bu) values ('" + person.name + "'," + q + ")";
            insert(q);

            jButton1.setEnabled(false);

        } else {
            jTextArea1.append("error!" + "\n");
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jCheckBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox2ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox2ItemStateChanged

    private void jCheckBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox3ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox3ItemStateChanged

    private void jCheckBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox4ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox4ItemStateChanged

    private void jCheckBox5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox5ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox5ItemStateChanged

    private void jCheckBox6ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox6ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox6ItemStateChanged

    private void jCheckBox7ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox7ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox7ItemStateChanged

    private void jCheckBox8ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox8ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox8ItemStateChanged

    private void jCheckBox9ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox9ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox9ItemStateChanged

    private void jCheckBox10ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox10ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox10ItemStateChanged

    private void jCheckBox11ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox11ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox11ItemStateChanged

    private void jCheckBox13ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox13ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox13ItemStateChanged

    private void jCheckBox14ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox14ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox14ItemStateChanged

    private void jCheckBox15ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox15ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox15ItemStateChanged

    private void jCheckBox16ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox16ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox16ItemStateChanged

    private void jCheckBox17ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox17ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox17ItemStateChanged

    private void jCheckBox18ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox18ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox18ItemStateChanged

    private void jCheckBox19ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox19ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox19ItemStateChanged

    private void jCheckBox20ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox20ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox20ItemStateChanged

    private void jCheckBox21ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox21ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox21ItemStateChanged

    private void jCheckBox12ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox12ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox12ItemStateChanged

    private void jCheckBox22ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox22ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox22ItemStateChanged

    private void jCheckBox23ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox23ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox23ItemStateChanged

    private void jCheckBox24ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox24ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox24ItemStateChanged

    private void jCheckBox25ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox25ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox25ItemStateChanged

    private void jCheckBox26ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox26ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox26ItemStateChanged

    private void jCheckBox27ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox27ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox27ItemStateChanged

    private void jCheckBox28ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox28ItemStateChanged
        // TODO add your handling code here:


    }//GEN-LAST:event_jCheckBox28ItemStateChanged

    private void jCheckBox29ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox29ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox29ItemStateChanged

    private void jCheckBox30ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox30ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox30ItemStateChanged

    private void jCheckBox31ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox31ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox31ItemStateChanged

    private void jCheckBox32ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox32ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox32ItemStateChanged

    private void jCheckBox33ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox33ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox33ItemStateChanged

    private void jCheckBox34ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox34ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox34ItemStateChanged

    private void jCheckBox35ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox35ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox35ItemStateChanged

    private void jCheckBox36ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox36ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox36ItemStateChanged

    private void jList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList2ValueChanged
        // TODO add your handling code here:
        jCheckBox12.setSelected(false);
        jCheckBox22.setSelected(false);
        jCheckBox23.setSelected(false);
        jCheckBox24.setSelected(false);
        jCheckBox25.setSelected(false);
        jCheckBox26.setSelected(false);
        jCheckBox27.setSelected(false);
        jCheckBox28.setSelected(false);
        jCheckBox29.setSelected(false);
        jCheckBox30.setSelected(false);
        jCheckBox31.setSelected(false);
        jCheckBox32.setSelected(false);
        jCheckBox33.setSelected(false);
        jCheckBox34.setSelected(false);
        jCheckBox35.setSelected(false);
        jCheckBox36.setSelected(false);

        if (jList2.getSelectedIndex() == 0) {
            location = (String) jList3.getSelectedValue();
            if (jList3.getSelectedIndex() != -1) {
                for (int i = 0; i < base.get(jList3.getSelectedIndex()).size(); i++) {
                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC1")) {
                        jCheckBox12.setSelected(true);
                    } else {
                        //jCheckBox12.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC2")) {
                        jCheckBox22.setSelected(true);
                    } else {
                        //jCheckBox22.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC3")) {
                        jCheckBox23.setSelected(true);
                    } else {
                        //jCheckBox23.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC4")) {
                        jCheckBox24.setSelected(true);
                    } else {
                        //jCheckBox24.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC5")) {
                        jCheckBox25.setSelected(true);
                    } else {
                        //jCheckBox25.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC6")) {
                        jCheckBox26.setSelected(true);
                    } else {
                        //jCheckBox26.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC7")) {
                        jCheckBox27.setSelected(true);
                    } else {
                        //jCheckBox27.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC8")) {
                        jCheckBox28.setSelected(true);
                    } else {
                        //jCheckBox28.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC9")) {
                        jCheckBox29.setSelected(true);
                    } else {
                        //jCheckBox29.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("FC1")) {
                        jCheckBox30.setSelected(true);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("FC2")) {
                        jCheckBox31.setSelected(true);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("FC3")) {
                        jCheckBox32.setSelected(true);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CCB")) {
                        jCheckBox33.setSelected(true);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("FC2N")) {
                        jCheckBox34.setSelected(true);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("FC2CC")) {
                        jCheckBox35.setSelected(true);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("FC2BU")) {
                        jCheckBox36.setSelected(true);
                    }

                }
            }
        }

        if (jList2.getSelectedIndex() == 1) {
            location = (String) jList3.getSelectedValue();
            if (jList3.getSelectedIndex() != -1) {
                for (int i = 0; i < nonbase.get(jList3.getSelectedIndex()).size(); i++) {
                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC1")) {
                        jCheckBox12.setSelected(true);
                    } else {
                        //jCheckBox12.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC2")) {
                        jCheckBox22.setSelected(true);
                    } else {
                        //jCheckBox22.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC3")) {
                        jCheckBox23.setSelected(true);
                    } else {
                        //jCheckBox23.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC4")) {
                        jCheckBox24.setSelected(true);
                    } else {
                        //jCheckBox24.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC5")) {
                        jCheckBox25.setSelected(true);
                    } else {
                        //jCheckBox25.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC6")) {
                        jCheckBox26.setSelected(true);
                    } else {
                        //jCheckBox26.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC7")) {
                        jCheckBox27.setSelected(true);
                    } else {
                        //jCheckBox27.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC8")) {
                        jCheckBox28.setSelected(true);
                    } else {
                        //jCheckBox28.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC9")) {
                        jCheckBox29.setSelected(true);
                    } else {
                        //jCheckBox29.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC1")) {
                        jCheckBox30.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2")) {
                        jCheckBox31.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC3")) {
                        jCheckBox32.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CCB")) {
                        jCheckBox33.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2N")) {
                        jCheckBox34.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2CC")) {
                        jCheckBox35.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2BU")) {
                        jCheckBox36.setSelected(true);
                    }
                }
            }
        }
    }//GEN-LAST:event_jList2ValueChanged

    private void jList3ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList3ValueChanged
        // TODO add your handling code here:
        jCheckBox12.setSelected(false);
        jCheckBox22.setSelected(false);
        jCheckBox23.setSelected(false);
        jCheckBox24.setSelected(false);
        jCheckBox25.setSelected(false);
        jCheckBox26.setSelected(false);
        jCheckBox27.setSelected(false);
        jCheckBox28.setSelected(false);
        jCheckBox29.setSelected(false);
        jCheckBox30.setSelected(false);
        jCheckBox31.setSelected(false);
        jCheckBox32.setSelected(false);
        jCheckBox33.setSelected(false);
        jCheckBox34.setSelected(false);
        jCheckBox35.setSelected(false);
        jCheckBox36.setSelected(false);

        if (jList2.getSelectedIndex() == 0) {
            location = (String) jList3.getSelectedValue();
            if (jList3.getSelectedIndex() != -1) {
                for (int i = 0; i < base.get(jList3.getSelectedIndex()).size(); i++) {
                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC1")) {
                        jCheckBox12.setSelected(true);

                        //System.out.println(base.get(jList3.getSelectedIndex()).get(i)+"    "+jList3.getSelectedIndex()+"    "+i);
//                        System.out.println(base.get(1).get(0)+"  mmmm");
                    } else {
                        //jCheckBox12.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC2")) {
                        jCheckBox22.setSelected(true);
                    } else {
                        //jCheckBox22.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC3")) {
                        jCheckBox23.setSelected(true);
                    } else {
                        //jCheckBox23.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC4")) {
                        jCheckBox24.setSelected(true);
                    } else {
                        // jCheckBox24.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC5")) {
                        jCheckBox25.setSelected(true);
                    } else {
                        //jCheckBox25.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC6")) {
                        jCheckBox26.setSelected(true);
                    } else {
                        //jCheckBox26.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC7")) {
                        jCheckBox27.setSelected(true);
                    } else {
                        //jCheckBox27.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC8")) {
                        jCheckBox28.setSelected(true);
                    } else {
                        //jCheckBox28.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CC9")) {
                        jCheckBox29.setSelected(true);
                    } else {
                        //jCheckBox29.setSelected(false);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("FC1")) {
                        jCheckBox30.setSelected(true);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("FC2")) {
                        jCheckBox31.setSelected(true);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("FC3")) {
                        jCheckBox32.setSelected(true);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("CCB")) {
                        jCheckBox33.setSelected(true);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("FC2N")) {
                        jCheckBox34.setSelected(true);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("FC2CC")) {
                        jCheckBox35.setSelected(true);
                    }

                    if (base.get(jList3.getSelectedIndex()).get(i).equals("FC2BU")) {
                        jCheckBox36.setSelected(true);
                    }
                }
            }
        }

        if (jList2.getSelectedIndex() == 1) {
            location = (String) jList3.getSelectedValue();
            //System.out.println(nonbase.get(jList3.getSelectedIndex()).size());
            if (jList3.getSelectedIndex() != -1) {
                for (int i = 0; i < nonbase.get(jList3.getSelectedIndex()).size(); i++) {
                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC1")) {
                        jCheckBox12.setSelected(true);
                    } else {
                        //jCheckBox12.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC2")) {
                        jCheckBox22.setSelected(true);
                    } else {
                        //jCheckBox22.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC3")) {
                        jCheckBox23.setSelected(true);
                    } else {
                        //jCheckBox23.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC4")) {
                        jCheckBox24.setSelected(true);
                    } else {
                        //jCheckBox24.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC5")) {
                        jCheckBox25.setSelected(true);
                    } else {
                        //jCheckBox25.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC6")) {
                        jCheckBox26.setSelected(true);
                    } else {
                        //jCheckBox26.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC7")) {
                        jCheckBox27.setSelected(true);
                    } else {
                        //jCheckBox27.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC8")) {
                        jCheckBox28.setSelected(true);
                    } else {
                        //jCheckBox28.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC9")) {
                        jCheckBox29.setSelected(true);
                    } else {
                        //jCheckBox29.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC1")) {
                        jCheckBox30.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2")) {
                        jCheckBox31.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC3")) {
                        jCheckBox32.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CCB")) {
                        jCheckBox33.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2N")) {
                        jCheckBox34.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2CC")) {
                        jCheckBox35.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2BU")) {
                        jCheckBox36.setSelected(true);
                    }
                }
            }
        }
        if (jList2.getSelectedIndex() == 2) {
            location = (String) jList3.getSelectedValue();
            //System.out.println(nonbase.get(jList3.getSelectedIndex()).size());
            if (jList3.getSelectedIndex() != -1) {
                for (int i = 0; i < nonbase.get(jList3.getSelectedIndex()).size(); i++) {
                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC1")) {
                        jCheckBox12.setSelected(true);
                    } else {
                        //jCheckBox12.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC2")) {
                        jCheckBox22.setSelected(true);
                    } else {
                        //jCheckBox22.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC3")) {
                        jCheckBox23.setSelected(true);
                    } else {
                        //jCheckBox23.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC4")) {
                        jCheckBox24.setSelected(true);
                    } else {
                        //jCheckBox24.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC5")) {
                        jCheckBox25.setSelected(true);
                    } else {
                        //jCheckBox25.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC6")) {
                        jCheckBox26.setSelected(true);
                    } else {
                        //jCheckBox26.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC7")) {
                        jCheckBox27.setSelected(true);
                    } else {
                        //jCheckBox27.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC8")) {
                        jCheckBox28.setSelected(true);
                    } else {
                        //jCheckBox28.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC9")) {
                        jCheckBox29.setSelected(true);
                    } else {
                        //jCheckBox29.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC1")) {
                        jCheckBox30.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2")) {
                        jCheckBox31.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC3")) {
                        jCheckBox32.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CCB")) {
                        jCheckBox33.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2N")) {
                        jCheckBox34.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2CC")) {
                        jCheckBox35.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2BU")) {
                        jCheckBox36.setSelected(true);
                    }
                }
            }
        }

        if (jList2.getSelectedIndex() == 3) {
            location = (String) jList3.getSelectedValue();
            //System.out.println(nonbase.get(jList3.getSelectedIndex()).size());
            if (jList3.getSelectedIndex() != -1) {
                for (int i = 0; i < nonbase.get(jList3.getSelectedIndex()).size(); i++) {
                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC1")) {
                        jCheckBox12.setSelected(true);
                    } else {
                        //jCheckBox12.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC2")) {
                        jCheckBox22.setSelected(true);
                    } else {
                        //jCheckBox22.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC3")) {
                        jCheckBox23.setSelected(true);
                    } else {
                        //jCheckBox23.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC4")) {
                        jCheckBox24.setSelected(true);
                    } else {
                        //jCheckBox24.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC5")) {
                        jCheckBox25.setSelected(true);
                    } else {
                        //jCheckBox25.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC6")) {
                        jCheckBox26.setSelected(true);
                    } else {
                        //jCheckBox26.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC7")) {
                        jCheckBox27.setSelected(true);
                    } else {
                        //jCheckBox27.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC8")) {
                        jCheckBox28.setSelected(true);
                    } else {
                        //jCheckBox28.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CC9")) {
                        jCheckBox29.setSelected(true);
                    } else {
                        //jCheckBox29.setSelected(false);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC1")) {
                        jCheckBox30.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2")) {
                        jCheckBox31.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC3")) {
                        jCheckBox32.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("CCB")) {
                        jCheckBox33.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2N")) {
                        jCheckBox34.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2CC")) {
                        jCheckBox35.setSelected(true);
                    }

                    if (nonbase.get(jList3.getSelectedIndex()).get(i).equals("FC2BU")) {
                        jCheckBox36.setSelected(true);
                    }
                }
            }
        }
    }//GEN-LAST:event_jList3ValueChanged

    private void jMenuItem1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_jMenuItem1MouseClicked

    private void jMenuItem1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MouseEntered
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jMenuItem1MouseEntered

    private void jMenuItem1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MousePressed
        // TODO add your handling code here:
          System.out.println("   bbbbbb");
        //jButton1.addActionListener(new java.awt.event.ActionListener() {   public void actionPerformed(java.awt.event.ActionEvent e) {new addspecial().setVisible(ture);}});
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                //new addstaff().hide();
                new addspecial().setVisible(true);

                //System.exit(0);
                //new addstaff().
                //new addspecial().setVisible(true);
            }
        });
        try {        Thread.sleep(150);//括号里面的5000代表5000毫秒，也就是5秒，可以该成你需要的时间
        } catch (InterruptedException e) {        e.printStackTrace();}
        this.setVisible(false);
        //this.dispose();
    }//GEN-LAST:event_jMenuItem1MousePressed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addstaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addstaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addstaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addstaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
//System.out.println(baseday.location.size());
        // baseday(null;null;null);
        ArrayList<String> s = new ArrayList<String>();
        //System.out.println(base.size());
        for (int i = 0; i < 4; i++)// 4 locations
        {
            base.add(new ArrayList<String>());
            nonbase.add(new ArrayList<String>());
        }
        //base.get(0).add("ppp");
        //base.get(1).add("qqq");
        //s.clone(base.get(0));
        //s.add("yyy");
        //base.set(0, s);
        //System.out.println(base.get(3).get(0));
        //System.out.println(base.get(0).size());
        //System.out.println(base.size());
        s.add("aa");

        //base.add(s);
        //System.out.println(base.get(0).get(0));
        //ArrayList<coord_baseday> base=new ArrayList<coord_baseday>();
        //base.add(new coord_baseday(s));
        //s.clear();
        //s.add("bb");
        //base.add(new coord_baseday(s));
        //base.set(0, base.get(0));
        //base.add(new ArrayList<coord_baseday>(new ArrayList<String>("CCCP")));
        //base.add(new ArrayList<String>());
        // base.add(new ArrayList<String>());
        //base.get(0).add("CCCP");
        //base.get(0).add("USA");
        //base.get(1).add("UK");
        // base.add(base.get(0).add("CCCP"));
        //base.get(0).
        //System.out.println(base.get(0).get(1));
        /*
         ArrayList<ArrayList<String>> collection = new ArrayList<ArrayList<String>>();

         ArrayList<String> listOfSomething1 = new ArrayList<String>();
         listOfSomething1.add("first");
         listOfSomething1.add("second");

         ArrayList<String> listOfSomething2 = new ArrayList<String>();
         listOfSomething2.add("3rd");

         collection.add(listOfSomething1);    
         collection.add(listOfSomething2);
         //listOfSomething2.clone();
         //listOfSomething2.clear();
         collection.add(new ArrayList<String>());
         collection.get(2).add("CCCP");
         System.out.println(collection.get(1).get(0));
         */
        all_locations = new ArrayList<String>();

        all_locations.add("ABERFOYLE PARK");
        all_locations.add("WILLUNGA");
        all_locations.add("WOODCROFT");
        all_locations.add("NOARLUNGA");

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addstaff().setVisible(true);
                // new addspecial().setVisible(true);
            }
        });

    }

    public String query(int num) {
        String q = "";
        ArrayList<Integer> position_temp = new ArrayList<>();
        for (int i = 0; i < amount_position; i++) {
            position_temp.add(0);
        }

        for (int i = 0; i < person.baseday.position.get(num).size(); i++) {//position: easy to save in the database
            if (person.baseday.position.get(num).get(i).equals("CC1")) {
                position_temp.set(0, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("CC2")) {
                position_temp.set(1, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("CC3")) {
                position_temp.set(2, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("CC4")) {
                position_temp.set(3, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("CC5")) {
                position_temp.set(4, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("CC6")) {
                position_temp.set(5, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("CC7")) {
                position_temp.set(6, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("CC8")) {
                position_temp.set(7, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("CC9")) {
                position_temp.set(8, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("FC1")) {
                position_temp.set(9, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("FC2")) {
                position_temp.set(10, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("FC3")) {
                position_temp.set(11, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("CCB")) {
                position_temp.set(12, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("FC2N")) {
                position_temp.set(13, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("FC2CC")) {
                position_temp.set(14, 1);
            }
            if (person.baseday.position.get(num).get(i).equals("FC2BU")) {
                position_temp.set(15, 1);
            }

        }

        for (int i = 0; i < position_temp.size(); i++) {
            q = q + "" + position_temp.get(i) + "";
            if (i < position_temp.size() - 1) {
                q = q + ",";
            }
        }
        return q;
    }

    public String non_query(int num) {
        String q = "";
        ArrayList<Integer> position_temp = new ArrayList<>();
        for (int i = 0; i < amount_position; i++) {
            position_temp.add(0);
        }

        for (int i = 0; i < person.nonbaseday.position.get(num).size(); i++) {//position: easy to save in the database
            if (person.nonbaseday.position.get(num).get(i).equals("CC1")) {
                position_temp.set(0, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("CC2")) {
                position_temp.set(1, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("CC3")) {
                position_temp.set(2, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("CC4")) {
                position_temp.set(3, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("CC5")) {
                position_temp.set(4, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("CC6")) {
                position_temp.set(5, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("CC7")) {
                position_temp.set(6, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("CC8")) {
                position_temp.set(7, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("CC9")) {
                position_temp.set(8, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("FC1")) {
                position_temp.set(9, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("FC2")) {
                position_temp.set(10, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("FC3")) {
                position_temp.set(11, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("CCB")) {
                position_temp.set(12, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("FC2N")) {
                position_temp.set(13, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("FC2CC")) {
                position_temp.set(14, 1);
            }
            if (person.nonbaseday.position.get(num).get(i).equals("FC2BU")) {
                position_temp.set(15, 1);
            }

        }

        for (int i = 0; i < position_temp.size(); i++) {
            q = q + "" + position_temp.get(i) + "";
            if (i < position_temp.size() - 1) {
                q = q + ",";
            }
        }
        return q;
    }

    public void insert(String q) {

        Connection conn = null;
        try {
//        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            // DB d=new DB();
        } catch (java.lang.ClassNotFoundException e) {
            e.printStackTrace();
        }
        //System.out.println("ssssss  ");
        try {
            //conn = DriverManager.getConnection("jdbc:odbc:dbpoolname",  "sa", "123456");  
            conn = DriverManager.getConnection("jdbc:sqlserver://testsql:1433;DatabaseName5=roster", "shahua", "4321");
            System.out.println("connected");
        } catch (SQLException e) {
            System.out.println(e);
        }

        //String q="insert into users (name, password) values ('Li Gang', '8765')";
        try {
            Statement stmt = conn.createStatement();
            PreparedStatement pstmt = null;
            pstmt = conn.prepareCall(q);
            pstmt.executeUpdate();

            stmt.close();
            conn.close();
            System.out.println("inserted");
        } catch (Exception e) {
            System.out.println(e);
        }

    }

    String[] locations_baseday = new String[4];    //?
    String[] locations_nonbaseday = new String[4]; //?
    ArrayList<String> positions_baseday;  //should be [][]
    ArrayList<String> positions_nonbaseday; //??
    static individual_availble baseday;     //??
    static individual_availble nonbaseday;  //??
    ArrayList<String> basedays;             //?

    static ArrayList<ArrayList<String>> base = new ArrayList<ArrayList<String>>();     //the positions of base or nonbase day in each location
    static ArrayList<ArrayList<String>> nonbase = new ArrayList<ArrayList<String>>();

    String day;        //??
    String name;      //person's name 
    String location;  //get location from list
    static ArrayList<String> all_locations; //??
    int location_value;//??
    individual person; //all information about the person
    private String[] working_day = new String[21]; //the base day or nonbase...
    int amount_position = 16; //number of position (cc1 cc2 ...)


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox22;
    private javax.swing.JCheckBox jCheckBox23;
    private javax.swing.JCheckBox jCheckBox24;
    private javax.swing.JCheckBox jCheckBox25;
    private javax.swing.JCheckBox jCheckBox26;
    private javax.swing.JCheckBox jCheckBox27;
    private javax.swing.JCheckBox jCheckBox28;
    private javax.swing.JCheckBox jCheckBox29;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox30;
    private javax.swing.JCheckBox jCheckBox31;
    private javax.swing.JCheckBox jCheckBox32;
    private javax.swing.JCheckBox jCheckBox33;
    private javax.swing.JCheckBox jCheckBox34;
    private javax.swing.JCheckBox jCheckBox35;
    private javax.swing.JCheckBox jCheckBox36;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JList jList3;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
